name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  pr_title_check:
    name: PR Title Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Validate PR title format
        run: |
          TITLE=$(jq -r .pull_request.title "$GITHUB_EVENT_PATH")
          echo "PR Title: $TITLE"
          if ! echo "$TITLE" | grep -Eq '^PA[0-9]+: .+'; then
            echo "Pull request title must follow format: 'PA<Jira ticket number>: Description'"
            exit 1
          fi

  lint:
    name: RuboCop Lint
    runs-on: ubuntu-latest
    needs: pr_title_check

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Run RuboCop
        run: bundle exec rubocop --parallel

  test:
    name: RSpec Test
    runs-on: ubuntu-latest
    needs: pr_title_check

    services:
      postgres:
        image: postgres:14
        ports: ["5432:5432"]
        env:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Prepare database
        run: |
          bin/rails db:create
          bin/rails db:schema:load

      - name: Run RSpec
        run: bundle exec rspec
